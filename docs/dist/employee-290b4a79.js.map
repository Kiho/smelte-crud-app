{"version":3,"file":"employee-290b4a79.js","sources":["../../src/app/employee/employee.ts"],"sourcesContent":["import AppService from '../../services/appService';\n\nconst path = 'employee';\nconst title = 'Employees';\n\nexport const fielddata: IField[] = [\n{\n    label: 'ID', \n    field: 'id',\n    component: 'text',\n    readonly: true,\n    row: 0,\n    col: 'md-6'\n}, {\n    label: 'Name',\n    field: 'name',\n    component: 'text',\n    required: true,\n    row: 1,\n    col: 'md-6'\n}, {\n    label: 'Title',\n    field: 'title',\n    component: 'text',\n    required: true,\n    row: 2,\n    col: 'md-6'\n}, {\n    label: 'Department',\n    field: 'departmentId',\n    component: 'select',\n    row: 3,\n    col: 'md-6'\n}, {\n    label: 'Rate',\n    field: 'rate',\n    component: 'text', // component: 'currency',\n    required: true,\n    row: 4,\n    col: 'md-6'\n}];\n\nexport const columndata: IColumn[] = fielddata.map(x => Object.assign({}, x));\nexport const actionColumn: IColumn = {\n    label: 'Edit', \n    field: 'field',\n    component: 'action',\n    class: 'secondary',\n};\ncolumndata.push(actionColumn);\n\nconst initialData = {\n    list: [],\n    showModal: false,\n    selectedItem: null,\n    path, \n    title,             \n    fielddata,\n    columndata,\n};\n\nconst departmentField = fielddata.find(x => x.field == 'departmentId');\nconst departmentColumn = columndata.find(x => x.field == 'departmentId');\ndepartmentColumn.component = '';\n\nconst employee = {\n    async oncreate(instance: IAppPage) {    \n        actionColumn.action = (row) => instance.edit(row);\n        await this.getDepartmentList(instance);\n    },\n    \n    async getDepartmentList(instance: IAppPage) {\n        console.log('getList');\n        const depts = await AppService.getList('department');\n        instance.$set({ departmentList: depts });\n        departmentField.items = depts.map(x => ({ value: x.id, text: x.name }));\n        departmentField.items.unshift({ value: 0 , text: ''});\n        departmentColumn.field = (data) => {\n            const found = depts.find(x => x.id == data.departmentId);\n            return found ? found.name : '';\n        }\n    },\n}\nexport { initialData, employee }"],"names":["fielddata","label","field","component","readonly","row","col","required","columndata","map","x","Object","assign","actionColumn","class","push","initialData","list","showModal","selectedItem","path","title","departmentField","find","departmentColumn","employee","oncreate","instance","action","edit","this","getDepartmentList","_a","console","log","AppService","getList","depts","$set","departmentList","items","value","id","text","name","unshift","data","found","departmentId"],"mappings":"uFAEA,IAGaA,EAAsB,CACnC,CACIC,MAAO,KACPC,MAAO,KACPC,UAAW,OACXC,UAAU,EACVC,IAAK,EACLC,IAAK,QACN,CACCL,MAAO,OACPC,MAAO,OACPC,UAAW,OACXI,UAAU,EACVF,IAAK,EACLC,IAAK,QACN,CACCL,MAAO,QACPC,MAAO,QACPC,UAAW,OACXI,UAAU,EACVF,IAAK,EACLC,IAAK,QACN,CACCL,MAAO,aACPC,MAAO,eACPC,UAAW,SACXE,IAAK,EACLC,IAAK,QACN,CACCL,MAAO,OACPC,MAAO,OACPC,UAAW,OACXI,UAAU,EACVF,IAAK,EACLC,IAAK,SAGIE,EAAwBR,EAAUS,IAAI,SAAAC,GAAK,OAAAC,OAAOC,OAAO,GAAIF,KAC7DG,EAAwB,CACjCZ,MAAO,OACPC,MAAO,QACPC,UAAW,SACXW,MAAO,aAEXN,EAAWO,KAAKF,GAEhB,IAAMG,EAAc,CAChBC,KAAM,GACNC,WAAW,EACXC,aAAc,KACdC,KArDS,WAsDTC,MArDU,YAsDVrB,YACAQ,cAGEc,EAAkBtB,EAAUuB,KAAK,SAAAb,GAAK,MAAW,gBAAXA,EAAER,QACxCsB,EAAmBhB,EAAWe,KAAK,SAAAb,GAAK,MAAW,gBAAXA,EAAER,QAChDsB,EAAiBrB,UAAY,GAE7B,IAAMsB,EAAW,CACPC,SAAN,SAAeC,2FAEX,OADAd,EAAae,OAAS,SAACvB,GAAQ,OAAAsB,EAASE,KAAKxB,OACvCyB,KAAKC,kBAAkBJ,kBAA7BK,mBAGED,kBAAN,SAAwBJ,iGAEN,OADdM,QAAQC,IAAI,cACQC,EAAWC,QAAQ,6BAAjCC,EAAQL,SACdL,EAASW,KAAK,CAAEC,eAAgBF,IAChCf,EAAgBkB,MAAQH,EAAM5B,IAAI,SAAAC,GAAK,OAAG+B,MAAO/B,EAAEgC,GAAIC,KAAMjC,EAAEkC,QAC/DtB,EAAgBkB,MAAMK,QAAQ,CAAEJ,MAAO,EAAIE,KAAM,KACjDnB,EAAiBtB,MAAQ,SAAC4C,GACtB,IAAMC,EAAQV,EAAMd,KAAK,SAAAb,GAAK,OAAAA,EAAEgC,IAAMI,EAAKE,eAC3C,OAAOD,EAAQA,EAAMH,KAAO"}